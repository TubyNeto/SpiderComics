{"remainingRequest":"C:\\Users\\tuby_\\Desktop\\spider-comics\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\tuby_\\Desktop\\spider-comics\\src\\components\\HelloWorld.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\tuby_\\Desktop\\spider-comics\\src\\components\\HelloWorld.vue","mtime":1572879992054},{"path":"C:\\Users\\tuby_\\Desktop\\spider-comics\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\tuby_\\Desktop\\spider-comics\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\tuby_\\Desktop\\spider-comics\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\tuby_\\Desktop\\spider-comics\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nexport default {\r\n  name: \"HelloWorld\",\r\n  data() {\r\n    return {\r\n      next_scene: false,\r\n      frame: null\r\n    };\r\n  },\r\n  methods: {\r\n    getImage(e) {\r\n      let image = e.target.files[0];\r\n      let reader = new FileReader();\r\n      reader.readAsDataURL(image);\r\n      reader.onload = e => {    \r\n        this.$emit(\"frame\", e.target.result);\r\n        this.$emit(\"next-scene\", true);\r\n      };\r\n    }\r\n  },\r\n  props: {\r\n    nextScene: {\r\n      type: Boolean || Number || Array || Object,\r\n      default: false,\r\n      required: false\r\n    }\r\n  }\r\n};\r\n",{"version":3,"sources":["HelloWorld.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"HelloWorld.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div>\r\n\r\n    <div class=\"file is-boxed is-large is-warning is-centered\">\r\n      <label class=\"file-label\">\r\n        <input class=\"file-input\" type=\"file\" name=\"resume\" @change='getImage'>\r\n        <span class=\"file-cta\">\r\n          UPLOAD\r\n        </span>\r\n      </label>\r\n    </div>\r\n   \r\n    <img :src=\"frame\">\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"HelloWorld\",\r\n  data() {\r\n    return {\r\n      next_scene: false,\r\n      frame: null\r\n    };\r\n  },\r\n  methods: {\r\n    getImage(e) {\r\n      let image = e.target.files[0];\r\n      let reader = new FileReader();\r\n      reader.readAsDataURL(image);\r\n      reader.onload = e => {    \r\n        this.$emit(\"frame\", e.target.result);\r\n        this.$emit(\"next-scene\", true);\r\n      };\r\n    }\r\n  },\r\n  props: {\r\n    nextScene: {\r\n      type: Boolean || Number || Array || Object,\r\n      default: false,\r\n      required: false\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\nh3 {\r\n  margin: 40px 0 0;\r\n}\r\nul {\r\n  list-style-type: none;\r\n  padding: 0;\r\n}\r\nli {\r\n  display: inline-block;\r\n  margin: 0 10px;\r\n}\r\n.botao {\r\n  color: #ffffff;\r\n}\r\n</style>\r\n"]}]}